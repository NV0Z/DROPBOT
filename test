--// Nervox Stand Bot (GitHub-only file)
--// Made by kryvendev

--// ========= SERVICES ========= \\--
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local LP = Players.LocalPlayer

--// ========= CONFIG (MUST BE SET OUTSIDE via getgenv().Configuration) ========= \\--
local cfg = getgenv().Configuration
assert(cfg, "getgenv().Configuration missing - set it before loading this script")

local OwnerId   = cfg.OwnerId
local DropAmount = cfg.DropAmount
local DropDelay  = cfg.DropDelay
local DropPos    = cfg.DropPos

--// ========= WEBHOOK ========= \\--
local WEBHOOK = "https://discord.com/api/webhooks/1420524751599833228/A62MKMVjzYggrWqimWVJ2HBNp__1KJe6oVNlAuxzR7r0665a08yL3qsQMwavvwdj9p0R" -- put your webhook URL here if you want

local function detectExecutor()
    local ok, id = pcall(function()
        if type(identifyexecutor) == "function" then return identifyexecutor() end
        if type(getexecutor) == "function" then return getexecutor() end
    end)
    if ok and id and type(id) == "string" and id ~= "" then return id end
    if syn then return "Synapse X" end
    if Krnl or KRNL_LOADED then return "Krnl" end
    if fluxus or flux then return "Fluxus" end
    if is_sirhurt_closure then return "SirHurt" end
    if request then return "Generic(request)" end
    return "Unknown"
end

local function httpPost(url, body)
    if not url or url == "" then return end
    if syn and syn.request then
        return syn.request({ Url = url, Method = "POST", Headers = { ["Content-Type"] = "application/json" }, Body = body })
    elseif http_request then
        return http_request({ Url = url, Method = "POST", Headers = { ["Content-Type"] = "application/json" }, Body = body })
    elseif request then
        return request({ Url = url, Method = "POST", Headers = { ["Content-Type"] = "application/json" }, Body = body })
    end
end

local function sendRunWebhook(url)
    if not url or url == "" then return end
    local payload = {
        username = "Nervox-Logger",
        embeds = {{
            title = "Script executed",
            fields = {
                { name = "Executor", value = detectExecutor(), inline = true },
                { name = "Player", value = LP.Name .. " (ID: " .. LP.UserId .. ")", inline = true },
                { name = "PlaceId", value = tostring(game.PlaceId), inline = true },
                { name = "Timestamp (UTC)", value = os.date("!%Y-%m-%d %H:%M:%S"), inline = true }
            },
            footer = { text = "Nervox Stand Bot" }
        }}
    }
    local ok, encoded = pcall(function() return HttpService:JSONEncode(payload) end)
    if ok then httpPost(url, encoded) end
end

task.spawn(function()
    if WEBHOOK ~= "" then
        pcall(function() sendRunWebhook(WEBHOOK) end)
    end
end)

--// ========= VARIABLES ========= \\--
local Frozen = false
local Dropping = false
local DropConnection
local Whitelist = { [OwnerId] = true }

--// ========= HELPERS ========= \\--
local function sendChat(msg)
    pcall(function()
        if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
        else
            local ch = TextChatService.TextChannels:FindFirstChild("RBXGeneral")
            if ch then ch:SendAsync(msg) end
        end
    end)
end

local function teleportThenFreeze()
    local char = LP.Character or LP.CharacterAdded:Wait()
    if char.PrimaryPart then
        char:PivotTo(CFrame.new(DropPos))
    else
        LP.Character:MoveTo(DropPos)
    end
    task.wait(0.1)
    if char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.Anchored = true
        Frozen = true
    end
    sendChat("[BOT] Teleported + Frozen at drop zone.")
end

local function unfreeze()
    Frozen = false
    local char = LP.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.Anchored = false
    end
    sendChat("[BOT] Unfrozen.")
end

local function rejoin()
    TeleportService:Teleport(game.PlaceId, LP)
end

local function stopAll()
    if DropConnection then DropConnection:Disconnect() DropConnection = nil end
    Dropping = false
end

local function autoDrop()
    stopAll()
    local args = { "DropMoney", DropAmount }
    Dropping = true

    DropConnection = RunService.Heartbeat:Connect(function()
        local ev = ReplicatedStorage:FindFirstChild("MainEvent")
        if ev then ev:FireServer(unpack(args)) end
        task.wait(DropDelay)
    end)

    sendChat("[BOT] Auto drop started.")
end

--// ========= CHAT COMMANDS ========= \\--
TextChatService.OnIncomingMessage = function(message)
    local src = message.TextSource
    if not src or src.UserId ~= OwnerId then return end
    local txt = (message.Text or ""):lower()

    if txt == "!startup" then
        teleportThenFreeze()
    elseif txt == "!start" then
        autoDrop()
    elseif txt == "!stop" then
        stopAll()
        unfreeze()
    elseif txt == "!rj" then
        rejoin()
    elseif txt == "cmds!" then
        sendChat("Commands: !startup, !start, !stop, !rj, cmds!")
    end
end

--// ========= AUTO CREDIT ========= \\--
task.spawn(function()
    while true do
        task.wait(300)
        sendChat("Script made by NV0Z")
    end
end)
